<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Covid19Analysis' inline='true' name='federated.0b9os451gi544n12lg2qr1lp595x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='unemployement' name='textscan.17y45m80nq08wi1fs4qjs09vgf33'>
            <connection class='textscan' directory='C:/Users/pablo/Downloads/Covid19Data-20230504T030253Z-001/Covid19Data' filename='unemployement.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='economy.csv' table='[economy#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='id_economy' ordinal='0' />
            <column datatype='integer' name='id_place' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='unemployement.csv' table='[unemployement#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_unemployement' ordinal='0' />
              <column datatype='real' name='unrate' ordinal='1' />
              <column datatype='real' name='unrate_men' ordinal='2' />
              <column datatype='real' name='unrate_women' ordinal='3' />
              <column datatype='real' name='unrate_16_to_17' ordinal='4' />
              <column datatype='real' name='unrate_18_to_19' ordinal='5' />
              <column datatype='real' name='unrate_20_to_24' ordinal='6' />
              <column datatype='real' name='unrate_25_to_34' ordinal='7' />
              <column datatype='real' name='unrate_35_to_44' ordinal='8' />
              <column datatype='real' name='unrate_45_to_54' ordinal='9' />
              <column datatype='real' name='unrate_55_over' ordinal='10' />
              <column datatype='date' name='date' ordinal='11' />
              <column datatype='integer' name='id_economy' ordinal='12' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='economy.csv' table='[economy#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_economy' ordinal='0' />
              <column datatype='integer' name='id_place' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='macro_values.csv' table='[macro_values#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_macro_values' ordinal='0' />
              <column datatype='real' name='inflation_rate' ordinal='1' />
              <column datatype='integer' name='gdp_per_capita' ordinal='2' />
              <column datatype='integer' name='population' ordinal='3' />
              <column datatype='real' name='human_development_index' ordinal='4' />
              <column datatype='integer' name='year' ordinal='5' />
              <column datatype='integer' name='id_economy' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='min_wage.csv' table='[min_wage#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_minwage' ordinal='0' />
              <column datatype='integer' name='year' ordinal='1' />
              <column datatype='real' name='state_minimum_wage' ordinal='2' />
              <column datatype='real' name='state_minimum_wage_2020_dollars' ordinal='3' />
              <column datatype='real' name='federal_minimum_wage' ordinal='4' />
              <column datatype='real' name='federal_minumum_wage_2020_dollars' ordinal='5' />
              <column datatype='real' name='effective_minimum_wage' ordinal='6' />
              <column datatype='real' name='effective_minimum_wage_2020_dollars' ordinal='7' />
              <column datatype='real' name='cpi_average' ordinal='8' />
              <column datatype='integer' name='id_economy' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='place.csv' table='[place#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='id_state' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='population' ordinal='2' />
              <column datatype='integer' name='id_place' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='health.csv' table='[health#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_health' ordinal='0' />
              <column datatype='integer' name='id_place' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='hospital_beds_usa.csv' table='[hospital_beds_usa#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_hospital_beds_usa' ordinal='0' />
              <column datatype='integer' name='year' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='real' name='beds' ordinal='3' />
              <column datatype='integer' name='population' ordinal='4' />
              <column datatype='integer' name='id_health' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='hospital_charges.csv' table='[hospital_charges#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_hospital_charges' ordinal='0' />
              <column datatype='integer' name='total_discharges' ordinal='1' />
              <column datatype='real' name='average_covered_charges' ordinal='2' />
              <column datatype='real' name='average_total_payments' ordinal='3' />
              <column datatype='real' name='average_medicare_payments' ordinal='4' />
              <column datatype='integer' name='id_health' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='us_state_vaccines.csv' table='[us_state_vaccines#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_us_state_vaccines' ordinal='0' />
              <column datatype='real' name='total_vaccinations' ordinal='1' />
              <column datatype='real' name='total_distributed' ordinal='2' />
              <column datatype='real' name='people_vaccinated' ordinal='3' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='4' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='5' />
              <column datatype='real' name='people_fully_vaccinated' ordinal='6' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='7' />
              <column datatype='real' name='distributed_per_hundred' ordinal='8' />
              <column datatype='real' name='daily_vaccinations_raw' ordinal='9' />
              <column datatype='real' name='daily_vaccinations' ordinal='10' />
              <column datatype='real' name='daily_vaccinations_per_million' ordinal='11' />
              <column datatype='real' name='share_doses_used' ordinal='12' />
              <column datatype='date' name='date' ordinal='13' />
              <column datatype='integer' name='id_health' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='prevention.csv' table='[prevention#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_prevention' ordinal='0' />
              <column datatype='integer' name='id_place' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='lockdowns.csv' table='[lockdowns#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_lockdown' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='integer' name='id_prevention' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='mask_usage.csv' table='[mask_usage#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_mask_usage' ordinal='0' />
              <column datatype='real' name='never' ordinal='1' />
              <column datatype='real' name='rarely' ordinal='2' />
              <column datatype='real' name='sometimes' ordinal='3' />
              <column datatype='real' name='frequently' ordinal='4' />
              <column datatype='real' name='always' ordinal='5' />
              <column datatype='integer' name='id_prevention' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='policies.csv' table='[policies#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='id_policy' ordinal='0' />
              <column datatype='date' name='schools_closed' ordinal='1' />
              <column datatype='date' name='nonessential_biz_closed' ordinal='2' />
              <column datatype='date' name='stayathome_start' ordinal='3' />
              <column datatype='date' name='regional_biz_opened' ordinal='4' />
              <column datatype='date' name='regional_stayathome_end' ordinal='5' />
              <column datatype='date' name='statewide_biz_opened' ordinal='6' />
              <column datatype='date' name='statewide_stayathome_end' ordinal='7' />
              <column datatype='date' name='regional_biz_reclosed' ordinal='8' />
              <column datatype='date' name='statewide_biz_reclosed' ordinal='9' />
              <column datatype='integer' name='id_prevention' ordinal='10' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[always]' value='[mask_usage.csv].[always]' />
          <map key='[average_covered_charges]' value='[hospital_charges.csv].[average_covered_charges]' />
          <map key='[average_medicare_payments]' value='[hospital_charges.csv].[average_medicare_payments]' />
          <map key='[average_total_payments]' value='[hospital_charges.csv].[average_total_payments]' />
          <map key='[beds]' value='[hospital_beds_usa.csv].[beds]' />
          <map key='[cpi_average]' value='[min_wage.csv].[cpi_average]' />
          <map key='[daily_vaccinations]' value='[us_state_vaccines.csv].[daily_vaccinations]' />
          <map key='[daily_vaccinations_per_million]' value='[us_state_vaccines.csv].[daily_vaccinations_per_million]' />
          <map key='[daily_vaccinations_raw]' value='[us_state_vaccines.csv].[daily_vaccinations_raw]' />
          <map key='[date (lockdowns.csv)]' value='[lockdowns.csv].[date]' />
          <map key='[date (us_state_vaccines.csv)]' value='[us_state_vaccines.csv].[date]' />
          <map key='[date]' value='[unemployement.csv].[date]' />
          <map key='[distributed_per_hundred]' value='[us_state_vaccines.csv].[distributed_per_hundred]' />
          <map key='[effective_minimum_wage]' value='[min_wage.csv].[effective_minimum_wage]' />
          <map key='[effective_minimum_wage_2020_dollars]' value='[min_wage.csv].[effective_minimum_wage_2020_dollars]' />
          <map key='[federal_minimum_wage]' value='[min_wage.csv].[federal_minimum_wage]' />
          <map key='[federal_minumum_wage_2020_dollars]' value='[min_wage.csv].[federal_minumum_wage_2020_dollars]' />
          <map key='[frequently]' value='[mask_usage.csv].[frequently]' />
          <map key='[gdp_per_capita]' value='[macro_values.csv].[gdp_per_capita]' />
          <map key='[human_development_index]' value='[macro_values.csv].[human_development_index]' />
          <map key='[id_economy (economy.csv)]' value='[economy.csv].[id_economy]' />
          <map key='[id_economy (macro_values.csv)]' value='[macro_values.csv].[id_economy]' />
          <map key='[id_economy (min_wage.csv)]' value='[min_wage.csv].[id_economy]' />
          <map key='[id_economy]' value='[unemployement.csv].[id_economy]' />
          <map key='[id_health (hospital_beds_usa.csv)]' value='[hospital_beds_usa.csv].[id_health]' />
          <map key='[id_health (hospital_charges.csv)]' value='[hospital_charges.csv].[id_health]' />
          <map key='[id_health (us_state_vaccines.csv)]' value='[us_state_vaccines.csv].[id_health]' />
          <map key='[id_health]' value='[health.csv].[id_health]' />
          <map key='[id_hospital_beds_usa]' value='[hospital_beds_usa.csv].[id_hospital_beds_usa]' />
          <map key='[id_hospital_charges]' value='[hospital_charges.csv].[id_hospital_charges]' />
          <map key='[id_lockdown]' value='[lockdowns.csv].[id_lockdown]' />
          <map key='[id_macro_values]' value='[macro_values.csv].[id_macro_values]' />
          <map key='[id_mask_usage]' value='[mask_usage.csv].[id_mask_usage]' />
          <map key='[id_minwage]' value='[min_wage.csv].[id_minwage]' />
          <map key='[id_place (health.csv)]' value='[health.csv].[id_place]' />
          <map key='[id_place (place.csv)]' value='[place.csv].[id_place]' />
          <map key='[id_place (prevention.csv)]' value='[prevention.csv].[id_place]' />
          <map key='[id_place]' value='[economy.csv].[id_place]' />
          <map key='[id_policy]' value='[policies.csv].[id_policy]' />
          <map key='[id_prevention (lockdowns.csv)]' value='[lockdowns.csv].[id_prevention]' />
          <map key='[id_prevention (mask_usage.csv)]' value='[mask_usage.csv].[id_prevention]' />
          <map key='[id_prevention (policies.csv)]' value='[policies.csv].[id_prevention]' />
          <map key='[id_prevention]' value='[prevention.csv].[id_prevention]' />
          <map key='[id_state]' value='[place.csv].[id_state]' />
          <map key='[id_unemployement]' value='[unemployement.csv].[id_unemployement]' />
          <map key='[id_us_state_vaccines]' value='[us_state_vaccines.csv].[id_us_state_vaccines]' />
          <map key='[inflation_rate]' value='[macro_values.csv].[inflation_rate]' />
          <map key='[never]' value='[mask_usage.csv].[never]' />
          <map key='[nonessential_biz_closed]' value='[policies.csv].[nonessential_biz_closed]' />
          <map key='[people_fully_vaccinated]' value='[us_state_vaccines.csv].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated_per_hundred]' value='[us_state_vaccines.csv].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_vaccinated]' value='[us_state_vaccines.csv].[people_vaccinated]' />
          <map key='[people_vaccinated_per_hundred]' value='[us_state_vaccines.csv].[people_vaccinated_per_hundred]' />
          <map key='[population (hospital_beds_usa.csv)]' value='[hospital_beds_usa.csv].[population]' />
          <map key='[population (macro_values.csv)]' value='[macro_values.csv].[population]' />
          <map key='[population]' value='[place.csv].[population]' />
          <map key='[rarely]' value='[mask_usage.csv].[rarely]' />
          <map key='[regional_biz_opened]' value='[policies.csv].[regional_biz_opened]' />
          <map key='[regional_biz_reclosed]' value='[policies.csv].[regional_biz_reclosed]' />
          <map key='[regional_stayathome_end]' value='[policies.csv].[regional_stayathome_end]' />
          <map key='[schools_closed]' value='[policies.csv].[schools_closed]' />
          <map key='[share_doses_used]' value='[us_state_vaccines.csv].[share_doses_used]' />
          <map key='[sometimes]' value='[mask_usage.csv].[sometimes]' />
          <map key='[state]' value='[place.csv].[state]' />
          <map key='[state_minimum_wage]' value='[min_wage.csv].[state_minimum_wage]' />
          <map key='[state_minimum_wage_2020_dollars]' value='[min_wage.csv].[state_minimum_wage_2020_dollars]' />
          <map key='[statewide_biz_opened]' value='[policies.csv].[statewide_biz_opened]' />
          <map key='[statewide_biz_reclosed]' value='[policies.csv].[statewide_biz_reclosed]' />
          <map key='[statewide_stayathome_end]' value='[policies.csv].[statewide_stayathome_end]' />
          <map key='[stayathome_start]' value='[policies.csv].[stayathome_start]' />
          <map key='[total_discharges]' value='[hospital_charges.csv].[total_discharges]' />
          <map key='[total_distributed]' value='[us_state_vaccines.csv].[total_distributed]' />
          <map key='[total_vaccinations]' value='[us_state_vaccines.csv].[total_vaccinations]' />
          <map key='[total_vaccinations_per_hundred]' value='[us_state_vaccines.csv].[total_vaccinations_per_hundred]' />
          <map key='[type (lockdowns.csv)]' value='[lockdowns.csv].[type]' />
          <map key='[type]' value='[hospital_beds_usa.csv].[type]' />
          <map key='[unrate]' value='[unemployement.csv].[unrate]' />
          <map key='[unrate_16_to_17]' value='[unemployement.csv].[unrate_16_to_17]' />
          <map key='[unrate_18_to_19]' value='[unemployement.csv].[unrate_18_to_19]' />
          <map key='[unrate_20_to_24]' value='[unemployement.csv].[unrate_20_to_24]' />
          <map key='[unrate_25_to_34]' value='[unemployement.csv].[unrate_25_to_34]' />
          <map key='[unrate_35_to_44]' value='[unemployement.csv].[unrate_35_to_44]' />
          <map key='[unrate_45_to_54]' value='[unemployement.csv].[unrate_45_to_54]' />
          <map key='[unrate_55_over]' value='[unemployement.csv].[unrate_55_over]' />
          <map key='[unrate_men]' value='[unemployement.csv].[unrate_men]' />
          <map key='[unrate_women]' value='[unemployement.csv].[unrate_women]' />
          <map key='[year (macro_values.csv)]' value='[macro_values.csv].[year]' />
          <map key='[year (min_wage.csv)]' value='[min_wage.csv].[year]' />
          <map key='[year]' value='[hospital_beds_usa.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[economy.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[macro_values.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[place.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[health.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hospital_beds_usa.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hospital_charges.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[prevention.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[lockdowns.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mask_usage.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_unemployement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_unemployement]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>id_unemployement</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate_men</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate_men]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate_men</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate_women</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate_women]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate_women</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate_16_to_17</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate_16_to_17]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate_16_to_17</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate_18_to_19</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate_18_to_19]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate_18_to_19</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate_20_to_24</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate_20_to_24]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate_20_to_24</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate_25_to_34</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate_25_to_34]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate_25_to_34</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate_35_to_44</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate_35_to_44]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate_35_to_44</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate_45_to_54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate_45_to_54]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate_45_to_54</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unrate_55_over</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unrate_55_over]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>unrate_55_over</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_economy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_economy]</local-name>
            <parent-name>[unemployement.csv]</parent-name>
            <remote-alias>id_economy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_economy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_economy (economy.csv)]</local-name>
            <parent-name>[economy.csv]</parent-name>
            <remote-alias>id_economy</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[economy.csv_20AE4D0BC7C14D9B812F5C5B1F0B7F9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_place</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_place]</local-name>
            <parent-name>[economy.csv]</parent-name>
            <remote-alias>id_place</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[economy.csv_20AE4D0BC7C14D9B812F5C5B1F0B7F9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_macro_values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_macro_values]</local-name>
            <parent-name>[macro_values.csv]</parent-name>
            <remote-alias>id_macro_values</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inflation_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[inflation_rate]</local-name>
            <parent-name>[macro_values.csv]</parent-name>
            <remote-alias>inflation_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[macro_values.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population (macro_values.csv)]</local-name>
            <parent-name>[macro_values.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[macro_values.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (macro_values.csv)]</local-name>
            <parent-name>[macro_values.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_economy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_economy (macro_values.csv)]</local-name>
            <parent-name>[macro_values.csv]</parent-name>
            <remote-alias>id_economy</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_minwage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_minwage]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>id_minwage</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (min_wage.csv)]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_minimum_wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[state_minimum_wage]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>state_minimum_wage</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_minimum_wage_2020_dollars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[state_minimum_wage_2020_dollars]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>state_minimum_wage_2020_dollars</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>federal_minimum_wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[federal_minimum_wage]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>federal_minimum_wage</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>federal_minumum_wage_2020_dollars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[federal_minumum_wage_2020_dollars]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>federal_minumum_wage_2020_dollars</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effective_minimum_wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[effective_minimum_wage]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>effective_minimum_wage</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>effective_minimum_wage_2020_dollars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[effective_minimum_wage_2020_dollars]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>effective_minimum_wage_2020_dollars</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cpi_average</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cpi_average]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>cpi_average</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_economy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_economy (min_wage.csv)]</local-name>
            <parent-name>[min_wage.csv]</parent-name>
            <remote-alias>id_economy</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[id_state]</local-name>
            <parent-name>[place.csv]</parent-name>
            <remote-alias>id_state</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[place.csv_F9C5A515D43247939F602BF92CEB203E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[place.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[place.csv_F9C5A515D43247939F602BF92CEB203E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[place.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[place.csv_F9C5A515D43247939F602BF92CEB203E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_place</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_place (place.csv)]</local-name>
            <parent-name>[place.csv]</parent-name>
            <remote-alias>id_place</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[place.csv_F9C5A515D43247939F602BF92CEB203E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_health</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_health]</local-name>
            <parent-name>[health.csv]</parent-name>
            <remote-alias>id_health</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health.csv_E3AB580BBFC04FE1ADCCB98305E0531D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_place</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_place (health.csv)]</local-name>
            <parent-name>[health.csv]</parent-name>
            <remote-alias>id_place</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[health.csv_E3AB580BBFC04FE1ADCCB98305E0531D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_hospital_beds_usa</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_hospital_beds_usa]</local-name>
            <parent-name>[hospital_beds_usa.csv]</parent-name>
            <remote-alias>id_hospital_beds_usa</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_beds_usa.csv_D050926850EA43F4A6BD0EC177C853C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[hospital_beds_usa.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_beds_usa.csv_D050926850EA43F4A6BD0EC177C853C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[hospital_beds_usa.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_beds_usa.csv_D050926850EA43F4A6BD0EC177C853C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[beds]</local-name>
            <parent-name>[hospital_beds_usa.csv]</parent-name>
            <remote-alias>beds</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_beds_usa.csv_D050926850EA43F4A6BD0EC177C853C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population (hospital_beds_usa.csv)]</local-name>
            <parent-name>[hospital_beds_usa.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_beds_usa.csv_D050926850EA43F4A6BD0EC177C853C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_health</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_health (hospital_beds_usa.csv)]</local-name>
            <parent-name>[hospital_beds_usa.csv]</parent-name>
            <remote-alias>id_health</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_beds_usa.csv_D050926850EA43F4A6BD0EC177C853C2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_hospital_charges</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_hospital_charges]</local-name>
            <parent-name>[hospital_charges.csv]</parent-name>
            <remote-alias>id_hospital_charges</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_charges.csv_19C4E21FFC7749C5AE67DE4343FBA58B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_discharges</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_discharges]</local-name>
            <parent-name>[hospital_charges.csv]</parent-name>
            <remote-alias>total_discharges</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_charges.csv_19C4E21FFC7749C5AE67DE4343FBA58B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_covered_charges</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average_covered_charges]</local-name>
            <parent-name>[hospital_charges.csv]</parent-name>
            <remote-alias>average_covered_charges</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_charges.csv_19C4E21FFC7749C5AE67DE4343FBA58B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_total_payments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average_total_payments]</local-name>
            <parent-name>[hospital_charges.csv]</parent-name>
            <remote-alias>average_total_payments</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_charges.csv_19C4E21FFC7749C5AE67DE4343FBA58B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>average_medicare_payments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[average_medicare_payments]</local-name>
            <parent-name>[hospital_charges.csv]</parent-name>
            <remote-alias>average_medicare_payments</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_charges.csv_19C4E21FFC7749C5AE67DE4343FBA58B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_health</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_health (hospital_charges.csv)]</local-name>
            <parent-name>[hospital_charges.csv]</parent-name>
            <remote-alias>id_health</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hospital_charges.csv_19C4E21FFC7749C5AE67DE4343FBA58B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_us_state_vaccines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_us_state_vaccines]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>id_us_state_vaccines</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_distributed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_distributed]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>total_distributed</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distributed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distributed_per_hundred]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>distributed_per_hundred</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_raw]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>daily_vaccinations_raw</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>daily_vaccinations</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_per_million]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>daily_vaccinations_per_million</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_doses_used</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_doses_used]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>share_doses_used</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (us_state_vaccines.csv)]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>63</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_health</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_health (us_state_vaccines.csv)]</local-name>
            <parent-name>[us_state_vaccines.csv]</parent-name>
            <remote-alias>id_health</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_prevention</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_prevention]</local-name>
            <parent-name>[prevention.csv]</parent-name>
            <remote-alias>id_prevention</remote-alias>
            <ordinal>65</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[prevention.csv_3E1EB8DBFE864F02BDE48FCF22C10BD8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_place</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_place (prevention.csv)]</local-name>
            <parent-name>[prevention.csv]</parent-name>
            <remote-alias>id_place</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[prevention.csv_3E1EB8DBFE864F02BDE48FCF22C10BD8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_lockdown</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_lockdown]</local-name>
            <parent-name>[lockdowns.csv]</parent-name>
            <remote-alias>id_lockdown</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lockdowns.csv_605E01D74A384DDD8F83CC06B94D1640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date (lockdowns.csv)]</local-name>
            <parent-name>[lockdowns.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>68</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lockdowns.csv_605E01D74A384DDD8F83CC06B94D1640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type (lockdowns.csv)]</local-name>
            <parent-name>[lockdowns.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lockdowns.csv_605E01D74A384DDD8F83CC06B94D1640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_prevention</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_prevention (lockdowns.csv)]</local-name>
            <parent-name>[lockdowns.csv]</parent-name>
            <remote-alias>id_prevention</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[lockdowns.csv_605E01D74A384DDD8F83CC06B94D1640]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_mask_usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_mask_usage]</local-name>
            <parent-name>[mask_usage.csv]</parent-name>
            <remote-alias>id_mask_usage</remote-alias>
            <ordinal>71</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mask_usage.csv_C9246F00C72E449B95570398995BDAC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>never</remote-name>
            <remote-type>5</remote-type>
            <local-name>[never]</local-name>
            <parent-name>[mask_usage.csv]</parent-name>
            <remote-alias>never</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mask_usage.csv_C9246F00C72E449B95570398995BDAC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rarely</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rarely]</local-name>
            <parent-name>[mask_usage.csv]</parent-name>
            <remote-alias>rarely</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mask_usage.csv_C9246F00C72E449B95570398995BDAC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sometimes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sometimes]</local-name>
            <parent-name>[mask_usage.csv]</parent-name>
            <remote-alias>sometimes</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mask_usage.csv_C9246F00C72E449B95570398995BDAC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>frequently</remote-name>
            <remote-type>5</remote-type>
            <local-name>[frequently]</local-name>
            <parent-name>[mask_usage.csv]</parent-name>
            <remote-alias>frequently</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mask_usage.csv_C9246F00C72E449B95570398995BDAC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>always</remote-name>
            <remote-type>5</remote-type>
            <local-name>[always]</local-name>
            <parent-name>[mask_usage.csv]</parent-name>
            <remote-alias>always</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mask_usage.csv_C9246F00C72E449B95570398995BDAC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_prevention</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_prevention (mask_usage.csv)]</local-name>
            <parent-name>[mask_usage.csv]</parent-name>
            <remote-alias>id_prevention</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mask_usage.csv_C9246F00C72E449B95570398995BDAC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_policy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_policy]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>id_policy</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>schools_closed</remote-name>
            <remote-type>133</remote-type>
            <local-name>[schools_closed]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>schools_closed</remote-alias>
            <ordinal>79</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nonessential_biz_closed</remote-name>
            <remote-type>133</remote-type>
            <local-name>[nonessential_biz_closed]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>nonessential_biz_closed</remote-alias>
            <ordinal>80</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stayathome_start</remote-name>
            <remote-type>133</remote-type>
            <local-name>[stayathome_start]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>stayathome_start</remote-alias>
            <ordinal>81</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>regional_biz_opened</remote-name>
            <remote-type>133</remote-type>
            <local-name>[regional_biz_opened]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>regional_biz_opened</remote-alias>
            <ordinal>82</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>regional_stayathome_end</remote-name>
            <remote-type>133</remote-type>
            <local-name>[regional_stayathome_end]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>regional_stayathome_end</remote-alias>
            <ordinal>83</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>statewide_biz_opened</remote-name>
            <remote-type>133</remote-type>
            <local-name>[statewide_biz_opened]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>statewide_biz_opened</remote-alias>
            <ordinal>84</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>statewide_stayathome_end</remote-name>
            <remote-type>133</remote-type>
            <local-name>[statewide_stayathome_end]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>statewide_stayathome_end</remote-alias>
            <ordinal>85</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>regional_biz_reclosed</remote-name>
            <remote-type>133</remote-type>
            <local-name>[regional_biz_reclosed]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>regional_biz_reclosed</remote-alias>
            <ordinal>86</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>statewide_biz_reclosed</remote-name>
            <remote-type>133</remote-type>
            <local-name>[statewide_biz_reclosed]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>statewide_biz_reclosed</remote-alias>
            <ordinal>87</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_prevention</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_prevention (policies.csv)]</local-name>
            <parent-name>[policies.csv]</parent-name>
            <remote-alias>id_prevention</remote-alias>
            <ordinal>88</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total' datatype='real' name='[Calculation_773774733296508928]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[average_covered_charges]-[average_total_payments]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='economy.csv' datatype='table' name='[__tableau_internal_object_id__].[economy.csv_20AE4D0BC7C14D9B812F5C5B1F0B7F9E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='health.csv' datatype='table' name='[__tableau_internal_object_id__].[health.csv_E3AB580BBFC04FE1ADCCB98305E0531D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='hospital_beds_usa.csv' datatype='table' name='[__tableau_internal_object_id__].[hospital_beds_usa.csv_D050926850EA43F4A6BD0EC177C853C2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='hospital_charges.csv' datatype='table' name='[__tableau_internal_object_id__].[hospital_charges.csv_19C4E21FFC7749C5AE67DE4343FBA58B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='lockdowns.csv' datatype='table' name='[__tableau_internal_object_id__].[lockdowns.csv_605E01D74A384DDD8F83CC06B94D1640]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='macro_values.csv' datatype='table' name='[__tableau_internal_object_id__].[macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='mask_usage.csv' datatype='table' name='[__tableau_internal_object_id__].[mask_usage.csv_C9246F00C72E449B95570398995BDAC2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='min_wage.csv' datatype='table' name='[__tableau_internal_object_id__].[min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='place.csv' datatype='table' name='[__tableau_internal_object_id__].[place.csv_F9C5A515D43247939F602BF92CEB203E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='policies.csv' datatype='table' name='[__tableau_internal_object_id__].[policies.csv_C13A5EE379844A5A85CBBE5A918E549F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='prevention.csv' datatype='table' name='[__tableau_internal_object_id__].[prevention.csv_3E1EB8DBFE864F02BDE48FCF22C10BD8]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='unemployement.csv' datatype='table' name='[__tableau_internal_object_id__].[unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_state_vaccines.csv' datatype='table' name='[__tableau_internal_object_id__].[us_state_vaccines.csv_C751326DB336402881F1951C33318FC1]' role='measure' type='quantitative' />
      <column caption='Always' datatype='real' name='[always]' role='measure' type='quantitative' />
      <column caption='Average Covered Charges' datatype='real' name='[average_covered_charges]' role='measure' type='quantitative' />
      <column caption='Average Medicare Payments' datatype='real' name='[average_medicare_payments]' role='measure' type='quantitative' />
      <column caption='Average Total Payments' datatype='real' name='[average_total_payments]' role='measure' type='quantitative' />
      <column caption='Beds' datatype='real' name='[beds]' role='measure' type='quantitative' />
      <column caption='Cpi Average' datatype='real' name='[cpi_average]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations' datatype='real' name='[daily_vaccinations]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Per Million' datatype='real' name='[daily_vaccinations_per_million]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Raw' datatype='real' name='[daily_vaccinations_raw]' role='measure' type='quantitative' />
      <column caption='Date (Lockdowns.Csv)' datatype='date' name='[date (lockdowns.csv)]' role='dimension' type='ordinal' />
      <column caption='Date (Us State Vaccines.Csv)' datatype='date' name='[date (us_state_vaccines.csv)]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Distributed Per Hundred' datatype='real' name='[distributed_per_hundred]' role='measure' type='quantitative' />
      <column caption='Effective Minimum Wage' datatype='real' name='[effective_minimum_wage]' role='measure' type='quantitative' />
      <column caption='Effective Minimum Wage 2020 Dollars' datatype='real' name='[effective_minimum_wage_2020_dollars]' role='measure' type='quantitative' />
      <column caption='Federal Minimum Wage' datatype='real' name='[federal_minimum_wage]' role='measure' type='quantitative' />
      <column caption='Federal Minumum Wage 2020 Dollars' datatype='real' name='[federal_minumum_wage_2020_dollars]' role='measure' type='quantitative' />
      <column caption='Frequently' datatype='real' name='[frequently]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='integer' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Id Economy (Economy.Csv)' datatype='integer' name='[id_economy (economy.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Economy (Macro Values.Csv)' datatype='integer' name='[id_economy (macro_values.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Economy (Min Wage.Csv)' datatype='integer' name='[id_economy (min_wage.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Economy' datatype='integer' name='[id_economy]' role='dimension' type='ordinal' />
      <column caption='Id Health (Hospital Beds Usa.Csv)' datatype='integer' name='[id_health (hospital_beds_usa.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Health (Hospital Charges.Csv)' datatype='integer' name='[id_health (hospital_charges.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Health (Us State Vaccines.Csv)' datatype='integer' name='[id_health (us_state_vaccines.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Health' datatype='integer' name='[id_health]' role='dimension' type='ordinal' />
      <column caption='Id Hospital Beds Usa' datatype='integer' name='[id_hospital_beds_usa]' role='dimension' type='ordinal' />
      <column caption='Id Hospital Charges' datatype='integer' name='[id_hospital_charges]' role='dimension' type='ordinal' />
      <column caption='Id Lockdown' datatype='integer' name='[id_lockdown]' role='dimension' type='ordinal' />
      <column caption='Id Macro Values' datatype='integer' name='[id_macro_values]' role='dimension' type='ordinal' />
      <column caption='Id Mask Usage' datatype='integer' name='[id_mask_usage]' role='dimension' type='ordinal' />
      <column caption='Id Minwage' datatype='integer' name='[id_minwage]' role='dimension' type='ordinal' />
      <column caption='Id Place (Health.Csv)' datatype='integer' name='[id_place (health.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Place (Place.Csv)' datatype='integer' name='[id_place (place.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Place (Prevention.Csv)' datatype='integer' name='[id_place (prevention.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Place' datatype='integer' name='[id_place]' role='dimension' type='ordinal' />
      <column caption='Id Policy' datatype='integer' name='[id_policy]' role='dimension' type='ordinal' />
      <column caption='Id Prevention (Lockdowns.Csv)' datatype='integer' name='[id_prevention (lockdowns.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Prevention (Mask Usage.Csv)' datatype='integer' name='[id_prevention (mask_usage.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Prevention (Policies.Csv)' datatype='integer' name='[id_prevention (policies.csv)]' role='dimension' type='ordinal' />
      <column caption='Id Prevention' datatype='integer' name='[id_prevention]' role='dimension' type='ordinal' />
      <column caption='Id State' datatype='string' name='[id_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Id Unemployement' datatype='integer' name='[id_unemployement]' role='dimension' type='ordinal' />
      <column caption='Id Us State Vaccines' datatype='integer' name='[id_us_state_vaccines]' role='dimension' type='ordinal' />
      <column caption='Inflation Rate' datatype='real' name='[inflation_rate]' role='measure' type='quantitative' />
      <column caption='Never' datatype='real' name='[never]' role='measure' type='quantitative' />
      <column caption='Nonessential Biz Closed' datatype='date' name='[nonessential_biz_closed]' role='dimension' type='ordinal' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population (Hospital Beds Usa.Csv)' datatype='integer' name='[population (hospital_beds_usa.csv)]' role='measure' type='quantitative' />
      <column caption='Population (Macro Values.Csv)' datatype='integer' name='[population (macro_values.csv)]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Rarely' datatype='real' name='[rarely]' role='measure' type='quantitative' />
      <column caption='Regional Biz Opened' datatype='date' name='[regional_biz_opened]' role='dimension' type='ordinal' />
      <column caption='Regional Biz Reclosed' datatype='date' name='[regional_biz_reclosed]' role='dimension' type='ordinal' />
      <column caption='Regional Stayathome End' datatype='date' name='[regional_stayathome_end]' role='dimension' type='ordinal' />
      <column caption='Schools Closed' datatype='date' name='[schools_closed]' role='dimension' type='ordinal' />
      <column caption='Share Doses Used' datatype='real' name='[share_doses_used]' role='measure' type='quantitative' />
      <column caption='Sometimes' datatype='real' name='[sometimes]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Minimum Wage' datatype='real' name='[state_minimum_wage]' role='measure' type='quantitative' />
      <column caption='State Minimum Wage 2020 Dollars' datatype='real' name='[state_minimum_wage_2020_dollars]' role='measure' type='quantitative' />
      <column caption='Statewide Biz Opened' datatype='date' name='[statewide_biz_opened]' role='dimension' type='ordinal' />
      <column caption='Statewide Biz Reclosed' datatype='date' name='[statewide_biz_reclosed]' role='dimension' type='ordinal' />
      <column caption='Statewide Stayathome End' datatype='date' name='[statewide_stayathome_end]' role='dimension' type='ordinal' />
      <column caption='Stayathome Start' datatype='date' name='[stayathome_start]' role='dimension' type='ordinal' />
      <column caption='Total Discharges' datatype='integer' name='[total_discharges]' role='measure' type='quantitative' />
      <column caption='Total Distributed' datatype='real' name='[total_distributed]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Type (Lockdowns.Csv)' datatype='string' name='[type (lockdowns.csv)]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Unrate' datatype='real' name='[unrate]' role='measure' type='quantitative' />
      <column caption='Unrate 16 To 17' datatype='real' name='[unrate_16_to_17]' role='measure' type='quantitative' />
      <column caption='Unrate 18 To 19' datatype='real' name='[unrate_18_to_19]' role='measure' type='quantitative' />
      <column caption='Unrate 20 To 24' datatype='real' name='[unrate_20_to_24]' role='measure' type='quantitative' />
      <column caption='Unrate 25 To 34' datatype='real' name='[unrate_25_to_34]' role='measure' type='quantitative' />
      <column caption='Unrate 35 To 44' datatype='real' name='[unrate_35_to_44]' role='measure' type='quantitative' />
      <column caption='Unrate 45 To 54' datatype='real' name='[unrate_45_to_54]' role='measure' type='quantitative' />
      <column caption='Unrate 55 Over' datatype='real' name='[unrate_55_over]' role='measure' type='quantitative' />
      <column caption='Unrate Men' datatype='real' name='[unrate_men]' role='measure' type='quantitative' />
      <column caption='Unrate Women' datatype='real' name='[unrate_women]' role='measure' type='quantitative' />
      <column caption='Year (Macro Values.Csv)' datatype='integer' name='[year (macro_values.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (Min Wage.Csv)' datatype='integer' name='[year (min_wage.csv)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[always]' derivation='Avg' name='[avg:always:qk]' pivot='key' type='quantitative' />
      <column-instance column='[frequently]' derivation='Avg' name='[avg:frequently:qk]' pivot='key' type='quantitative' />
      <column-instance column='[never]' derivation='Avg' name='[avg:never:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rarely]' derivation='Avg' name='[avg:rarely:qk]' pivot='key' type='quantitative' />
      <column-instance column='[sometimes]' derivation='Avg' name='[avg:sometimes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[always]' derivation='Sum' name='[sum:always:qk]' pivot='key' type='quantitative' />
      <column-instance column='[effective_minimum_wage_2020_dollars]' derivation='Sum' name='[sum:effective_minimum_wage_2020_dollars:qk]' pivot='key' type='quantitative' />
      <column-instance column='[frequently]' derivation='Sum' name='[sum:frequently:qk]' pivot='key' type='quantitative' />
      <column-instance column='[rarely]' derivation='Sum' name='[sum:rarely:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:always:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:sometimes:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:never:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[sum:effective_minimum_wage_2020_dollars:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:rarely:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[sum:rarely:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:population:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:frequently:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[sum:always:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[sum:frequently:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='economy.csv' id='economy.csv_20AE4D0BC7C14D9B812F5C5B1F0B7F9E'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='economy.csv' table='[economy#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_economy' ordinal='0' />
                  <column datatype='integer' name='id_place' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='health.csv' id='health.csv_E3AB580BBFC04FE1ADCCB98305E0531D'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='health.csv' table='[health#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_health' ordinal='0' />
                  <column datatype='integer' name='id_place' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='hospital_beds_usa.csv' id='hospital_beds_usa.csv_D050926850EA43F4A6BD0EC177C853C2'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='hospital_beds_usa.csv' table='[hospital_beds_usa#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_hospital_beds_usa' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='real' name='beds' ordinal='3' />
                  <column datatype='integer' name='population' ordinal='4' />
                  <column datatype='integer' name='id_health' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='hospital_charges.csv' id='hospital_charges.csv_19C4E21FFC7749C5AE67DE4343FBA58B'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='hospital_charges.csv' table='[hospital_charges#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_hospital_charges' ordinal='0' />
                  <column datatype='integer' name='total_discharges' ordinal='1' />
                  <column datatype='real' name='average_covered_charges' ordinal='2' />
                  <column datatype='real' name='average_total_payments' ordinal='3' />
                  <column datatype='real' name='average_medicare_payments' ordinal='4' />
                  <column datatype='integer' name='id_health' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='lockdowns.csv' id='lockdowns.csv_605E01D74A384DDD8F83CC06B94D1640'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='lockdowns.csv' table='[lockdowns#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_lockdown' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='integer' name='id_prevention' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='macro_values.csv' id='macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='macro_values.csv' table='[macro_values#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_macro_values' ordinal='0' />
                  <column datatype='real' name='inflation_rate' ordinal='1' />
                  <column datatype='integer' name='gdp_per_capita' ordinal='2' />
                  <column datatype='integer' name='population' ordinal='3' />
                  <column datatype='real' name='human_development_index' ordinal='4' />
                  <column datatype='integer' name='year' ordinal='5' />
                  <column datatype='integer' name='id_economy' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='mask_usage.csv' id='mask_usage.csv_C9246F00C72E449B95570398995BDAC2'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='mask_usage.csv' table='[mask_usage#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_mask_usage' ordinal='0' />
                  <column datatype='real' name='never' ordinal='1' />
                  <column datatype='real' name='rarely' ordinal='2' />
                  <column datatype='real' name='sometimes' ordinal='3' />
                  <column datatype='real' name='frequently' ordinal='4' />
                  <column datatype='real' name='always' ordinal='5' />
                  <column datatype='integer' name='id_prevention' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='min_wage.csv' id='min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='min_wage.csv' table='[min_wage#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_minwage' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='state_minimum_wage' ordinal='2' />
                  <column datatype='real' name='state_minimum_wage_2020_dollars' ordinal='3' />
                  <column datatype='real' name='federal_minimum_wage' ordinal='4' />
                  <column datatype='real' name='federal_minumum_wage_2020_dollars' ordinal='5' />
                  <column datatype='real' name='effective_minimum_wage' ordinal='6' />
                  <column datatype='real' name='effective_minimum_wage_2020_dollars' ordinal='7' />
                  <column datatype='real' name='cpi_average' ordinal='8' />
                  <column datatype='integer' name='id_economy' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='place.csv' id='place.csv_F9C5A515D43247939F602BF92CEB203E'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='place.csv' table='[place#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='id_state' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='population' ordinal='2' />
                  <column datatype='integer' name='id_place' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='policies.csv' id='policies.csv_C13A5EE379844A5A85CBBE5A918E549F'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='policies.csv' table='[policies#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_policy' ordinal='0' />
                  <column datatype='date' name='schools_closed' ordinal='1' />
                  <column datatype='date' name='nonessential_biz_closed' ordinal='2' />
                  <column datatype='date' name='stayathome_start' ordinal='3' />
                  <column datatype='date' name='regional_biz_opened' ordinal='4' />
                  <column datatype='date' name='regional_stayathome_end' ordinal='5' />
                  <column datatype='date' name='statewide_biz_opened' ordinal='6' />
                  <column datatype='date' name='statewide_stayathome_end' ordinal='7' />
                  <column datatype='date' name='regional_biz_reclosed' ordinal='8' />
                  <column datatype='date' name='statewide_biz_reclosed' ordinal='9' />
                  <column datatype='integer' name='id_prevention' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='prevention.csv' id='prevention.csv_3E1EB8DBFE864F02BDE48FCF22C10BD8'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='prevention.csv' table='[prevention#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_prevention' ordinal='0' />
                  <column datatype='integer' name='id_place' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='unemployement.csv' id='unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='unemployement.csv' table='[unemployement#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_unemployement' ordinal='0' />
                  <column datatype='real' name='unrate' ordinal='1' />
                  <column datatype='real' name='unrate_men' ordinal='2' />
                  <column datatype='real' name='unrate_women' ordinal='3' />
                  <column datatype='real' name='unrate_16_to_17' ordinal='4' />
                  <column datatype='real' name='unrate_18_to_19' ordinal='5' />
                  <column datatype='real' name='unrate_20_to_24' ordinal='6' />
                  <column datatype='real' name='unrate_25_to_34' ordinal='7' />
                  <column datatype='real' name='unrate_35_to_44' ordinal='8' />
                  <column datatype='real' name='unrate_45_to_54' ordinal='9' />
                  <column datatype='real' name='unrate_55_over' ordinal='10' />
                  <column datatype='date' name='date' ordinal='11' />
                  <column datatype='integer' name='id_economy' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_state_vaccines.csv' id='us_state_vaccines.csv_C751326DB336402881F1951C33318FC1'>
            <properties context=''>
              <relation connection='textscan.17y45m80nq08wi1fs4qjs09vgf33' name='us_state_vaccines.csv' table='[us_state_vaccines#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id_us_state_vaccines' ordinal='0' />
                  <column datatype='real' name='total_vaccinations' ordinal='1' />
                  <column datatype='real' name='total_distributed' ordinal='2' />
                  <column datatype='real' name='people_vaccinated' ordinal='3' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='4' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='5' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='6' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='7' />
                  <column datatype='real' name='distributed_per_hundred' ordinal='8' />
                  <column datatype='real' name='daily_vaccinations_raw' ordinal='9' />
                  <column datatype='real' name='daily_vaccinations' ordinal='10' />
                  <column datatype='real' name='daily_vaccinations_per_million' ordinal='11' />
                  <column datatype='real' name='share_doses_used' ordinal='12' />
                  <column datatype='date' name='date' ordinal='13' />
                  <column datatype='integer' name='id_health' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id_economy]' />
              <expression op='[id_economy (economy.csv)]' />
            </expression>
            <first-end-point object-id='unemployement.csv_A0E2E6ED79794BB8A991A232ACF20B96' />
            <second-end-point object-id='economy.csv_20AE4D0BC7C14D9B812F5C5B1F0B7F9E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_place (place.csv)]' />
              <expression op='[id_place (health.csv)]' />
            </expression>
            <first-end-point object-id='place.csv_F9C5A515D43247939F602BF92CEB203E' />
            <second-end-point object-id='health.csv_E3AB580BBFC04FE1ADCCB98305E0531D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_health]' />
              <expression op='[id_health (hospital_beds_usa.csv)]' />
            </expression>
            <first-end-point object-id='health.csv_E3AB580BBFC04FE1ADCCB98305E0531D' />
            <second-end-point object-id='hospital_beds_usa.csv_D050926850EA43F4A6BD0EC177C853C2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_health]' />
              <expression op='[id_health (hospital_charges.csv)]' />
            </expression>
            <first-end-point object-id='health.csv_E3AB580BBFC04FE1ADCCB98305E0531D' />
            <second-end-point object-id='hospital_charges.csv_19C4E21FFC7749C5AE67DE4343FBA58B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_prevention]' />
              <expression op='[id_prevention (lockdowns.csv)]' />
            </expression>
            <first-end-point object-id='prevention.csv_3E1EB8DBFE864F02BDE48FCF22C10BD8' />
            <second-end-point object-id='lockdowns.csv_605E01D74A384DDD8F83CC06B94D1640' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_economy (economy.csv)]' />
              <expression op='[id_economy (macro_values.csv)]' />
            </expression>
            <first-end-point object-id='economy.csv_20AE4D0BC7C14D9B812F5C5B1F0B7F9E' />
            <second-end-point object-id='macro_values.csv_F7EDBC94A6D4424381C3CD0343EEE2B0' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_prevention]' />
              <expression op='[id_prevention (mask_usage.csv)]' />
            </expression>
            <first-end-point object-id='prevention.csv_3E1EB8DBFE864F02BDE48FCF22C10BD8' />
            <second-end-point object-id='mask_usage.csv_C9246F00C72E449B95570398995BDAC2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_economy (economy.csv)]' />
              <expression op='[id_economy (min_wage.csv)]' />
            </expression>
            <first-end-point object-id='economy.csv_20AE4D0BC7C14D9B812F5C5B1F0B7F9E' />
            <second-end-point object-id='min_wage.csv_1C725227FDF64AF5BB50FD56C49A7109' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_place]' />
              <expression op='[id_place (place.csv)]' />
            </expression>
            <first-end-point object-id='economy.csv_20AE4D0BC7C14D9B812F5C5B1F0B7F9E' />
            <second-end-point object-id='place.csv_F9C5A515D43247939F602BF92CEB203E' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_prevention]' />
              <expression op='[id_prevention (policies.csv)]' />
            </expression>
            <first-end-point object-id='prevention.csv_3E1EB8DBFE864F02BDE48FCF22C10BD8' />
            <second-end-point object-id='policies.csv_C13A5EE379844A5A85CBBE5A918E549F' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_place (place.csv)]' />
              <expression op='[id_place (prevention.csv)]' />
            </expression>
            <first-end-point object-id='place.csv_F9C5A515D43247939F602BF92CEB203E' />
            <second-end-point object-id='prevention.csv_3E1EB8DBFE864F02BDE48FCF22C10BD8' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[id_health]' />
              <expression op='[id_health (us_state_vaccines.csv)]' />
            </expression>
            <first-end-point object-id='health.csv_E3AB580BBFC04FE1ADCCB98305E0531D' />
            <second-end-point object-id='us_state_vaccines.csv_C751326DB336402881F1951C33318FC1' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total de camas disponibles por estado</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19Analysis' name='federated.0b9os451gi544n12lg2qr1lp595x' />
          </datasources>
          <datasource-dependencies datasource='federated.0b9os451gi544n12lg2qr1lp595x'>
            <column caption='Beds' datatype='real' name='[beds]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[beds]' derivation='Sum' name='[sum:beds:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;District of Columbia&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;United States&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]' direction='DESC' using='[federated.0b9os451gi544n12lg2qr1lp595x].[sum:beds:qk]' />
          <filter class='quantitative' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]' included-values='in-range'>
            <min>2012</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</column>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</rows>
        <cols>[federated.0b9os451gi544n12lg2qr1lp595x].[sum:beds:qk]</cols>
      </table>
      <simple-id uuid='{FB8C2012-D54A-45DD-940E-17966E25D294}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Promedio cubierto por el seguro por estado</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19Analysis' name='federated.0b9os451gi544n12lg2qr1lp595x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0b9os451gi544n12lg2qr1lp595x'>
            <column caption='Total' datatype='real' name='[Calculation_773774733296508928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[average_covered_charges]-[average_total_payments]' />
            </column>
            <column caption='Average Covered Charges' datatype='real' name='[average_covered_charges]' role='measure' type='quantitative' />
            <column caption='Average Total Payments' datatype='real' name='[average_total_payments]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_773774733296508928]' derivation='Avg' name='[avg:Calculation_773774733296508928:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_773774733296508928]' derivation='Sum' name='[sum:Calculation_773774733296508928:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]' direction='DESC' using='[federated.0b9os451gi544n12lg2qr1lp595x].[sum:Calculation_773774733296508928:qk]' />
          <filter class='quantitative' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]' included-values='in-range'>
            <min>2012</min>
            <max>2018</max>
          </filter>
          <slices>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]' />
              <color column='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:Calculation_773774733296508928:qk]' />
              <geometry column='[federated.0b9os451gi544n12lg2qr1lp595x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0b9os451gi544n12lg2qr1lp595x].[Latitude (generated)]</rows>
        <cols>[federated.0b9os451gi544n12lg2qr1lp595x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{577D62C1-7618-4808-BE02-398BAF4DD51B}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Promedio de uso de mascarilla por estado
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19Analysis' name='federated.0b9os451gi544n12lg2qr1lp595x' />
          </datasources>
          <datasource-dependencies datasource='federated.0b9os451gi544n12lg2qr1lp595x'>
            <column caption='Always' datatype='real' name='[always]' role='measure' type='quantitative' />
            <column-instance column='[always]' derivation='Avg' name='[avg:always:qk]' pivot='key' type='quantitative' />
            <column-instance column='[frequently]' derivation='Avg' name='[avg:frequently:qk]' pivot='key' type='quantitative' />
            <column-instance column='[never]' derivation='Avg' name='[avg:never:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rarely]' derivation='Avg' name='[avg:rarely:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sometimes]' derivation='Avg' name='[avg:sometimes:qk]' pivot='key' type='quantitative' />
            <column caption='Frequently' datatype='real' name='[frequently]' role='measure' type='quantitative' />
            <column caption='Never' datatype='real' name='[never]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Rarely' datatype='real' name='[rarely]' role='measure' type='quantitative' />
            <column caption='Sometimes' datatype='real' name='[sometimes]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b9os451gi544n12lg2qr1lp595x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:always:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:frequently:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:never:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:rarely:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0b9os451gi544n12lg2qr1lp595x].[avg:sometimes:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:always:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[:Measure Names]</column>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0b9os451gi544n12lg2qr1lp595x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</rows>
        <cols>[federated.0b9os451gi544n12lg2qr1lp595x].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E8A148D7-2F51-4DF2-95B1-BB21A68CFC21}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Salario minimo promedio por estado por año</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19Analysis' name='federated.0b9os451gi544n12lg2qr1lp595x' />
          </datasources>
          <datasource-dependencies datasource='federated.0b9os451gi544n12lg2qr1lp595x'>
            <column-instance column='[effective_minimum_wage]' derivation='Avg' name='[avg:effective_minimum_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Effective Minimum Wage' datatype='real' name='[effective_minimum_wage]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year (min_wage.csv)]' derivation='None' name='[none:year (min_wage.csv):qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year (Min Wage.Csv)' datatype='integer' name='[year (min_wage.csv)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:year (min_wage.csv):qk]' included-values='in-range'>
            <min>1968</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:year (min_wage.csv):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:effective_minimum_wage:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:effective_minimum_wage:qk]' />
              <color column='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:effective_minimum_wage:qk]' />
              <text column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{33B83EA8-5790-47B8-8129-10171FD4121F}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Poblacion promedio US</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19Analysis' name='federated.0b9os451gi544n12lg2qr1lp595x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0b9os451gi544n12lg2qr1lp595x'>
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]' />
              <color column='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:population:qk]' />
              <geometry column='[federated.0b9os451gi544n12lg2qr1lp595x].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0b9os451gi544n12lg2qr1lp595x].[Latitude (generated)]</rows>
        <cols>[federated.0b9os451gi544n12lg2qr1lp595x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F9216DB3-3968-424C-89C6-4B1F86DA2EFA}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Personas vacunadas en promedio por estado
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19Analysis' name='federated.0b9os451gi544n12lg2qr1lp595x' />
          </datasources>
          <datasource-dependencies datasource='federated.0b9os451gi544n12lg2qr1lp595x'>
            <column-instance column='[daily_vaccinations]' derivation='Avg' name='[avg:daily_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Daily Vaccinations' datatype='real' name='[daily_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:daily_vaccinations:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]' direction='DESC' using='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:daily_vaccinations:qk]' />
          <slices>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</column>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[avg:daily_vaccinations:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b9os451gi544n12lg2qr1lp595x].[avg:daily_vaccinations:qk]</rows>
        <cols>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{155EDA46-CA8B-495E-A82C-F927A0399353}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Personas completamente vacunadas por estado</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19Analysis' name='federated.0b9os451gi544n12lg2qr1lp595x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0b9os451gi544n12lg2qr1lp595x'>
            <column-instance column='[people_fully_vaccinated]' derivation='Avg' name='[avg:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:people_fully_vaccinated:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:people_fully_vaccinated:qk]' />
              <text column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3DFAF70E-6BC5-44A8-8718-7373C30C9CEF}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total de vacunas utilizadas en promedio por estado</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19Analysis' name='federated.0b9os451gi544n12lg2qr1lp595x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0b9os451gi544n12lg2qr1lp595x'>
            <column-instance column='[total_vaccinations]' derivation='Avg' name='[avg:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:total_vaccinations:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</column>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[avg:total_vaccinations:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:total_vaccinations:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</rows>
        <cols>[federated.0b9os451gi544n12lg2qr1lp595x].[avg:total_vaccinations:qk]</cols>
      </table>
      <simple-id uuid='{86A7BCAA-6D11-4663-9A1C-8EA065876BC6}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Poblacion promedio en hospitales  US</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid19Analysis' name='federated.0b9os451gi544n12lg2qr1lp595x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0b9os451gi544n12lg2qr1lp595x'>
            <column-instance column='[population (hospital_beds_usa.csv)]' derivation='Avg' name='[avg:population (hospital_beds_usa.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population (Hospital Beds Usa.Csv)' datatype='integer' name='[population (hospital_beds_usa.csv)]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]' direction='DESC' using='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:population (hospital_beds_usa.csv):qk]' />
          <filter class='quantitative' column='[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]' included-values='in-range'>
            <min>2012</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:population (hospital_beds_usa.csv):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:population (hospital_beds_usa.csv):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d9d9e8</color>
                <color>#c3c3e0</color>
                <color>#aeaed8</color>
                <color>#9a9acf</color>
                <color>#8787c7</color>
                <color>#7575bf</color>
                <color>#6465b6</color>
                <color>#5455ae</color>
                <color>#4546a6</color>
                <color>#38399e</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</rows>
        <cols>[federated.0b9os451gi544n12lg2qr1lp595x].[avg:population (hospital_beds_usa.csv):qk]</cols>
      </table>
      <simple-id uuid='{D7B7E1C7-9CF1-478B-B26B-2D61E553EFC5}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7153AC64-83F3-4C24-9E0A-8A8E03DB7DA2}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[avg:population (hospital_beds_usa.csv):qk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9AA7950-3B5F-476D-99C6-D7DCC107F1DC}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:Calculation_773774733296508928:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[avg:Calculation_773774733296508928:qk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:population (hospital_beds_usa.csv):qk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{048EBC8E-6636-4950-833E-8EF8BA691ABD}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[:Measure Names]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1650B872-B4A8-416A-993B-1009F4B32A4E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0b9os451gi544n12lg2qr1lp595x].[none:year (min_wage.csv):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:effective_minimum_wage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[avg:effective_minimum_wage:qk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:year (min_wage.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7DD120F4-91F8-42E3-B1C9-F6D1B53EBCCD}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0b9os451gi544n12lg2qr1lp595x].[avg:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:year (min_wage.csv):qk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[sum:effective_minimum_wage_2020_dollars:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7FED3B24-52DF-47A2-A550-88CBBE7F3C68}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87064223-9DCE-43CD-8FDF-BEC42DC745A6}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6160221D-CABE-40A7-88F2-EA7D7520A24C}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[none:state:nk]</field>
            <field>[federated.0b9os451gi544n12lg2qr1lp595x].[sum:total_vaccinations:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14FD4E9F-E194-4143-8047-631BDE06F3EB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      9yBjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      f/XMS8/SAZDzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      sf4/Mcff2sZm4WAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      mOHUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      tvTYLQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      WvP/AbiDBBN+S92bAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
